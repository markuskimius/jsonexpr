#ifndef JSONEXPR_H_
#define JSONEXPR_H_

#include "je_eval.h"
#include "je_node.h"
#include "je_parse.h"
#include "je_symtbl.h"
#include "je_val.h"

#ifdef __cplusplus
extern "C" {
#endif


/* ***************************************************************************
* CONSTANTS
*/

#define JE_VERSION       "${JE_VERSION}"
#define JE_VERSION_MAJOR ${JE_VERSION%%.*}
#define JE_VERSION_MINOR $(t=${JE_VERSION#*.}; printf "%s" "${t%.*}")
#define JE_VERSION_PATCH ${JE_VERSION##*.}


/* ***************************************************************************
* TYPES
*/

typedef struct JE_COMPILED {
    JE_NODE* ast;
    JE_SYMTBL* symtbl;
} JE_COMPILED;


/* ***************************************************************************
* PUBLIC FUNCTIONS
*/

JE_COMPILED* JE_Compile(const char* code);
JE_VAL* JE_EvalCompiled(JE_COMPILED* compiled);
void JE_FreeCompiled(JE_COMPILED* compiled);

int JE_SetSymbols(JE_COMPILED* compiled, const char* json);
void JE_ClearSymbols(JE_COMPILED* compiled);


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* JSONEXPR_H_ */

/* vim:ft=c:
*/
